# Generated by Django 5.2.3 on 2025-07-15 20:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('agriculture', '0003_cropadvisory'),
    ]

    operations = [
        migrations.CreateModel(
            name='FarmerDiaryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField(help_text='Date of the farming event')),
                ('crop_type', models.CharField(help_text='e.g., Wheat, Rice, Cotton', max_length=100)),
                ('event_description', models.TextField(help_text="Brief description of the event (e.g., 'Sowing', 'Fertilizer Application', 'Harvesting')")),
                ('purchase_price_seed', models.DecimalField(blank=True, decimal_places=2, help_text='Cost of seeds/saplings (per unit or total)', max_digits=10, null=True)),
                ('fertilizer_quantity_kg', models.FloatField(blank=True, help_text='Quantity of fertilizer used (in kg)', null=True)),
                ('fertilizer_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Total cost of fertilizer', max_digits=10, null=True)),
                ('diesel_usage_liters', models.FloatField(blank=True, help_text='Diesel used for machinery (in liters)', null=True)),
                ('diesel_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Total cost of diesel', max_digits=10, null=True)),
                ('labor_expenses', models.DecimalField(blank=True, decimal_places=2, help_text='Total cost of labor', max_digits=10, null=True)),
                ('other_expenses_description', models.CharField(blank=True, help_text="Description of other expenses (e.g., 'Pesticide cost', 'Irrigation fees')", max_length=255, null=True)),
                ('other_expenses_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of other expenses', max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes or custom inputs for this event', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Farmer Diary Entries',
                'ordering': ['-event_date', '-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='rainfalldata',
            options={'verbose_name_plural': 'Rainfall Data'},
        ),
        migrations.RemoveField(
            model_name='rainfalldata',
            name='month',
        ),
        migrations.RemoveField(
            model_name='rainfalldata',
            name='year',
        ),
        migrations.AlterField(
            model_name='rainfalldata',
            name='agency_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='CropProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('crop', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('season', models.CharField(blank=True, max_length=50, null=True)),
                ('area_in_hectares', models.FloatField(blank=True, null=True)),
                ('production_in_tonnes', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Crop Production Data',
                'unique_together': {('state', 'district', 'crop', 'year', 'season')},
            },
        ),
        migrations.CreateModel(
            name='PMKisanBeneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('total_beneficiaries', models.IntegerField(default=0)),
                ('male_beneficiaries', models.IntegerField(blank=True, default=0, null=True)),
                ('female_beneficiaries', models.IntegerField(blank=True, default=0, null=True)),
                ('sc_beneficiaries', models.IntegerField(blank=True, default=0, null=True)),
                ('st_beneficiaries', models.IntegerField(blank=True, default=0, null=True)),
                ('general_beneficiaries', models.IntegerField(blank=True, default=0, null=True)),
                ('as_on_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'PM-KISAN Beneficiaries',
                'unique_together': {('state', 'as_on_date')},
            },
        ),
    ]
